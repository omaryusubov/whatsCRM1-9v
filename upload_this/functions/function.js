const _0x2e6c69 = _0x341e; (function (_0x5c4995, _0x412295) { const _0x266284 = _0x341e, _0x1cfe12 = _0x5c4995(); while (!![]) { try { const _0x5c6483 = -parseInt(_0x266284(0x151)) / 0x1 * (-parseInt(_0x266284(0xef)) / 0x2) + parseInt(_0x266284(0xbf)) / 0x3 + parseInt(_0x266284(0x138)) / 0x4 + -parseInt(_0x266284(0x16d)) / 0x5 * (-parseInt(_0x266284(0xbd)) / 0x6) + parseInt(_0x266284(0xf3)) / 0x7 + -parseInt(_0x266284(0xd0)) / 0x8 * (-parseInt(_0x266284(0x154)) / 0x9) + -parseInt(_0x266284(0x106)) / 0xa * (parseInt(_0x266284(0x149)) / 0xb); if (_0x5c6483 === _0x412295) break; else _0x1cfe12['push'](_0x1cfe12['shift']()); } catch (_0x19f40f) { _0x1cfe12['push'](_0x1cfe12['shift']()); } } }(_0x3ba1, 0xbba0f)); const fs = require('fs'), path = require(_0x2e6c69(0xd2)), moment = require(_0x2e6c69(0x16e)), { query } = require('../database/dbpromise'), { default: axios } = require(_0x2e6c69(0xdb)), randomstring = require(_0x2e6c69(0xf9)), { getIOInstance } = require(_0x2e6c69(0x171)), fetch = require('node-fetch'), mime = require('mime-types'), nodemailer = require(_0x2e6c69(0xf1)), unzipper = require(_0x2e6c69(0x187)); function executeQueries(_0x1477d0, _0x2a1703) { return new Promise(async _0x140407 => { const _0x2e4522 = _0x341e; try { for (const _0x3261db of _0x1477d0) { await _0x2a1703[_0x2e4522(0x10e)](_0x3261db); } _0x140407({ 'success': !![] }); } catch (_0x5e3f29) { _0x140407({ 'success': ![], 'err': _0x5e3f29 }); } }); } function findTargetNodes(_0x57576e, _0x23cdbf, _0x1cbb14) { const _0x152cf8 = _0x2e6c69, _0x44ef50 = _0x23cdbf['filter'](_0x4bbb56 => _0x4bbb56['sourceHandle']?.[_0x152cf8(0x101)]() == _0x1cbb14?.[_0x152cf8(0x101)]()), _0x5e48b1 = _0x44ef50[_0x152cf8(0x162)](_0x186179 => _0x186179[_0x152cf8(0xc1)]), _0x4496a7 = _0x57576e['filter'](_0x2e110a => _0x5e48b1[_0x152cf8(0xfa)](_0x2e110a['id'])); return _0x4496a7; } function getReply(_0xb0e78b, _0x4997af, _0x1be002) { const _0x6bc6a2 = _0x2e6c69, _0x39807f = findTargetNodes(_0xb0e78b, _0x4997af, _0x1be002); if (_0x39807f[_0x6bc6a2(0xa5)] > 0x0) return _0x39807f; else { const _0x2adfca = findTargetNodes(_0xb0e78b, _0x4997af, _0x6bc6a2(0xb8)); return _0x2adfca; } } async function runChatbot(_0x30ad89, _0x363b13, _0x36f3e1, _0x310195, _0x16fa9a) { const _0x96456d = _0x2e6c69, _0x3fc515 = _0x30ad89, _0x58f981 = _0x30ad89?.['for_all'] > 0x0 ? !![] : ![]; if (!_0x58f981) { const _0xa37e86 = JSON['parse'](_0x3fc515?.[_0x96456d(0x14d)]), _0x2f1f9d = convertNumberToRandomString(_0x310195 || ''), _0x626e74 = JSON[_0x96456d(0x128)](_0x30ad89?.['flow']); if (_0xa37e86[_0x96456d(0xfa)](_0x310195)) { const _0x262d84 = __dirname + _0x96456d(0xe3) + _0x36f3e1 + '/' + _0x626e74?.[_0x96456d(0x136)] + _0x96456d(0x160), _0x2ae38c = __dirname + _0x96456d(0x163) + _0x36f3e1 + '/' + _0x626e74?.[_0x96456d(0x136)] + _0x96456d(0x160), _0x4635a9 = readJsonFromFile(_0x262d84), _0x296744 = readJsonFromFile(_0x2ae38c); if (_0x4635a9[_0x96456d(0xa5)] > 0x0 && _0x296744[_0x96456d(0xa5)] > 0x0) { const _0x467025 = getReply(_0x4635a9, _0x296744, _0x363b13); if (_0x467025[_0x96456d(0xa5)] > 0x0) for (const _0x5e297a of _0x467025) { const _0xcfd488 = { 'type': _0x5e297a?.[_0x96456d(0x179)]?.[_0x96456d(0x161)]?.['toLowerCase'](), 'metaChatId': '', 'msgContext': _0x5e297a?.[_0x96456d(0x164)], 'reaction': '', 'timestamp': '', 'senderName': _0x16fa9a, 'senderMobile': _0x310195, 'status': 'sent', 'star': ![], 'route': 'OUTGOING' }; await sendMetaMsg(_0x36f3e1, _0x5e297a?.[_0x96456d(0x164)], _0x310195, _0xcfd488, _0x2f1f9d); } } } } else { const _0x2604c5 = convertNumberToRandomString(_0x310195 || ''), _0x4dac45 = JSON[_0x96456d(0x128)](_0x30ad89?.[_0x96456d(0xdc)]), _0x106520 = __dirname + _0x96456d(0xe3) + _0x36f3e1 + '/' + _0x4dac45?.['flow_id'] + _0x96456d(0x160), _0xdfa8e0 = __dirname + _0x96456d(0x163) + _0x36f3e1 + '/' + _0x4dac45?.[_0x96456d(0x136)] + _0x96456d(0x160), _0x973b66 = readJsonFromFile(_0x106520), _0x5e00af = readJsonFromFile(_0xdfa8e0); if (_0x973b66[_0x96456d(0xa5)] > 0x0 && _0x5e00af['length'] > 0x0) { const _0x1a8a3d = getReply(_0x973b66, _0x5e00af, _0x363b13); if (_0x1a8a3d[_0x96456d(0xa5)] > 0x0) for (const _0x3a2f89 of _0x1a8a3d) { const _0x258f00 = { 'type': _0x3a2f89?.[_0x96456d(0x179)]?.[_0x96456d(0x161)]?.['toLowerCase'](), 'metaChatId': '', 'msgContext': _0x3a2f89?.[_0x96456d(0x164)], 'reaction': '', 'timestamp': '', 'senderName': _0x16fa9a, 'senderMobile': _0x310195, 'status': 'sent', 'star': ![], 'route': 'OUTGOING' }; await sendMetaMsg(_0x36f3e1, _0x3a2f89?.[_0x96456d(0x164)], _0x310195, _0x258f00, _0x2604c5); } } } } async function botWebhook(_0x2122cc, _0x14db2b, _0x192f1d, _0x41cad5) { const _0x4ce535 = _0x2e6c69; console[_0x4ce535(0xbb)]({ 'incomingMsg': _0x2122cc }); const _0x128ebb = await query(_0x4ce535(0x183), [_0x14db2b]); if (_0x128ebb[0x0]?.[_0x4ce535(0x122)]) { const _0x2d5bdc = JSON[_0x4ce535(0x128)](_0x128ebb[0x0]?.[_0x4ce535(0x122)]); if (_0x2d5bdc[_0x4ce535(0x10b)] > 0x0) { const _0x4f4693 = await query(_0x4ce535(0x176), [_0x14db2b, 0x1]); _0x4f4693[_0x4ce535(0xa5)] > 0x0 && await Promise[_0x4ce535(0xc6)](_0x4f4693[_0x4ce535(0x162)](_0x4325da => runChatbot(_0x4325da, _0x2122cc, _0x14db2b, _0x192f1d, _0x41cad5))); } else await query(_0x4ce535(0xaf), [0x0, _0x14db2b]); } } async function saveMessage(_0x2149ec, _0xa119c2, _0x48b69c, _0x2a5ea2) { const _0x2fce00 = _0x2e6c69; try { console[_0x2fce00(0xbb)](_0x2fce00(0xa0)); const _0x9d715e = await query('SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?', [_0xa119c2]), _0x2bd23a = getCurrentTimestampInTimeZone(_0x9d715e[0x0]?.[_0x2fce00(0x11c)] || Date[_0x2fce00(0xb7)]() / 0x3e8), _0x245c74 = convertNumberToRandomString(_0x2149ec?.['entry'][0x0]?.[_0x2fce00(0x140)][0x0]?.[_0x2fce00(0x108)]?.['contacts'][0x0]?.[_0x2fce00(0x142)], _0x2149ec?.[_0x2fce00(0x127)][0x0]?.['changes'] ? _0x2149ec?.[_0x2fce00(0x127)][0x0]?.[_0x2fce00(0x140)][0x0]?.['value']?.['contacts'][0x0]?.[_0x2fce00(0xfb)]?.[_0x2fce00(0x18b)] : 'NA'), _0x2e9722 = { 'type': _0x48b69c, 'metaChatId': _0x2149ec?.[_0x2fce00(0x127)][0x0]?.['changes'][0x0]?.[_0x2fce00(0x108)]?.[_0x2fce00(0x102)][0x0]?.['id'], 'msgContext': _0x2a5ea2, 'reaction': '', 'timestamp': _0x2bd23a, 'senderName': _0x2149ec?.[_0x2fce00(0x127)][0x0]?.[_0x2fce00(0x140)] ? _0x2149ec?.[_0x2fce00(0x127)][0x0]?.[_0x2fce00(0x140)][0x0]?.[_0x2fce00(0x108)]?.[_0x2fce00(0x145)][0x0]?.[_0x2fce00(0xfb)]?.[_0x2fce00(0x18b)] : 'NA', 'senderMobile': _0x2149ec?.[_0x2fce00(0x127)][0x0]?.[_0x2fce00(0x140)] ? _0x2149ec?.[_0x2fce00(0x127)][0x0]?.[_0x2fce00(0x140)][0x0]?.[_0x2fce00(0x108)]?.[_0x2fce00(0x145)][0x0]?.[_0x2fce00(0x142)] : 'NA', 'status': '', 'star': ![], 'route': 'INCOMING', 'context': _0x2149ec?.[_0x2fce00(0x127)][0x0]?.['changes'][0x0]?.[_0x2fce00(0x108)]?.[_0x2fce00(0x102)][0x0] ? _0x2149ec?.[_0x2fce00(0x127)][0x0]?.[_0x2fce00(0x140)][0x0]?.['value']?.['messages'][0x0]?.[_0x2fce00(0x16c)] : '' }, _0x16af0b = await query('SELECT\x20*\x20FROM\x20chats\x20WHERE\x20chat_id\x20=\x20?\x20AND\x20uid\x20=\x20?', [_0x245c74, _0xa119c2]); _0x16af0b[_0x2fce00(0xa5)] < 0x1 ? await query('INSERT\x20INTO\x20chats\x20(chat_id,\x20uid,\x20last_message_came,\x20sender_name,\x20sender_mobile,\x20last_message,\x20is_opened)\x20VALUES\x20(\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20?,?,?,?,?,?,?\x0a\x20\x20\x20\x20\x20\x20\x20\x20)', [_0x245c74, _0xa119c2, _0x2bd23a, _0x2149ec?.[_0x2fce00(0x127)][0x0]?.['changes'] ? _0x2149ec?.[_0x2fce00(0x127)][0x0]?.[_0x2fce00(0x140)][0x0]?.['value']?.[_0x2fce00(0x145)][0x0]?.[_0x2fce00(0xfb)]?.[_0x2fce00(0x18b)] : 'NA', _0x2149ec?.[_0x2fce00(0x127)][0x0]?.['changes'] ? _0x2149ec?.[_0x2fce00(0x127)][0x0]?.[_0x2fce00(0x140)][0x0]?.[_0x2fce00(0x108)]?.['contacts'][0x0]?.[_0x2fce00(0x142)] : 'NA', JSON[_0x2fce00(0x186)](_0x2e9722), 0x0]) : await query(_0x2fce00(0x123), [_0x2bd23a, JSON[_0x2fce00(0x186)](_0x2e9722), 0x0, _0x245c74, _0xa119c2]); const _0x12ccec = __dirname + _0x2fce00(0xd7) + _0xa119c2 + '/' + _0x245c74 + '.json'; addObjectToFile(_0x2e9722, _0x12ccec); const _0x387a55 = getIOInstance(), _0x3b8d10 = await query(_0x2fce00(0x13e), [_0xa119c2]), _0x1af27b = await query(_0x2fce00(0xac), [_0xa119c2]); _0x387a55['to'](_0x3b8d10[0x0]?.[_0x2fce00(0x17a)])[_0x2fce00(0x190)](_0x2fce00(0xb9), { 'chats': _0x1af27b }), _0x387a55['to'](_0x3b8d10[0x0]?.[_0x2fce00(0x17a)])[_0x2fce00(0x190)]('push_new_msg', { 'msg': _0x2e9722, 'chatId': _0x245c74 }); const _0x4da6ca = await query(_0x2fce00(0x11d), [_0xa119c2, _0x245c74]); if (_0x4da6ca['length'] > 0x0) { const _0x78f744 = await query(_0x2fce00(0x13e), [_0x4da6ca[0x0]?.[_0x2fce00(0xa3)]]); _0x387a55['to'](_0x78f744[0x0]?.[_0x2fce00(0x17a)])[_0x2fce00(0x190)](_0x2fce00(0xb9), { 'chats': _0x1af27b }), _0x387a55['to'](_0x78f744[0x0]?.[_0x2fce00(0x17a)])[_0x2fce00(0x190)](_0x2fce00(0x15b), { 'msg': _0x2e9722, 'chatId': _0x245c74 }); } } catch (_0x11ead5) { console[_0x2fce00(0xbb)](_0x2fce00(0x185), _0x11ead5); } } async function saveWebhookConversation(_0x3dd48d, _0x1b8562) { const _0x257204 = _0x2e6c69; if (_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)] && _0x3dd48d?.['entry'][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0xc8)] === 'text') saveMessage(_0x3dd48d, _0x1b8562, _0x257204(0x173), { 'type': _0x257204(0x173), 'text': { 'preview_url': !![], 'body': _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0x173)]?.[_0x257204(0x104)] } }), botWebhook(_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0x173)]?.[_0x257204(0x104)], _0x1b8562, _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.[_0x257204(0x142)], _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)] ? _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.['profile']?.['name'] : 'NA'); else { if (_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)] && _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0x17e)]) { const _0x229967 = await query(_0x257204(0x183), [_0x1b8562]), _0x560e4b = await query(_0x257204(0xeb), [_0x1b8562]), _0x2c1f30 = _0x560e4b[0x0]?.[_0x257204(0xca)]; if (_0x2c1f30) { console[_0x257204(0xbb)]({ 'metaToken': _0x2c1f30 }); const _0x480d40 = await downloadAndSaveMedia(_0x2c1f30, _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0x17e)]?.['id']); console[_0x257204(0xbb)]({ 'fileName': _0x480d40 }), saveMessage(_0x3dd48d, _0x1b8562, _0x257204(0x17e), { 'type': _0x257204(0x17e), 'image': { 'link': process[_0x257204(0x16b)][_0x257204(0x189)] + _0x257204(0xbc) + _0x480d40, 'caption': _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.['messages'][0x0]?.[_0x257204(0x17e)]?.[_0x257204(0xa4)] || '' } }); } botWebhook(_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.[_0x257204(0x102)][0x0]?.[_0x257204(0x17e)]?.[_0x257204(0xa4)] || _0x257204(0x118), _0x1b8562, _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.['contacts'][0x0]?.[_0x257204(0x142)], _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'] ? _0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.[_0x257204(0xfb)]?.[_0x257204(0x18b)] : 'NA'); } else { if (_0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)] && _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.['video']) { const _0x2a2059 = await query(_0x257204(0x183), [_0x1b8562]), _0x1cdafc = await query('SELECT\x20*\x20FROM\x20meta_api\x20WHERE\x20uid\x20=\x20?', [_0x1b8562]), _0x33e7bf = _0x1cdafc[0x0]?.[_0x257204(0xca)]; if (_0x33e7bf) { const _0x6e2451 = await downloadAndSaveMedia(_0x33e7bf, _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0x10c)]?.['id']); saveMessage(_0x3dd48d, _0x1b8562, _0x257204(0x10c), { 'type': 'video', 'video': { 'link': process[_0x257204(0x16b)]['FRONTENDURI'] + _0x257204(0xbc) + _0x6e2451, 'caption': _0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0x10c)]?.[_0x257204(0xa4)] } }); } botWebhook(_0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.['messages'][0x0]?.[_0x257204(0x10c)]?.['caption'] || _0x257204(0x118), _0x1b8562, _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.[_0x257204(0x142)], _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)] ? _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.[_0x257204(0xfb)]?.[_0x257204(0x18b)] : 'NA'); } else { if (_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)] && _0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.[_0x257204(0x102)][0x0]?.['document']) { const _0x4eb432 = await query(_0x257204(0x183), [_0x1b8562]), _0x104bc5 = await query(_0x257204(0xeb), [_0x1b8562]), _0x1bc2f8 = _0x104bc5[0x0]?.[_0x257204(0xca)]; if (_0x1bc2f8) { const _0x27e2c8 = await downloadAndSaveMedia(_0x1bc2f8, _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0xba)]?.['id']); saveMessage(_0x3dd48d, _0x1b8562, _0x257204(0xba), { 'type': 'document', 'document': { 'link': process[_0x257204(0x16b)][_0x257204(0x189)] + _0x257204(0xbc) + _0x27e2c8, 'caption': _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0xba)]?.[_0x257204(0xa4)] } }); } botWebhook(_0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0xba)]?.[_0x257204(0xa4)] || _0x257204(0x118), _0x1b8562, _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.['wa_id'], _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)] ? _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.[_0x257204(0x145)][0x0]?.[_0x257204(0xfb)]?.[_0x257204(0x18b)] : 'NA'); } else { if (_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)] && _0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.['audio']) { const _0x25a05c = await query(_0x257204(0x183), [_0x1b8562]), _0x597b3b = await query('SELECT\x20*\x20FROM\x20meta_api\x20WHERE\x20uid\x20=\x20?', [_0x1b8562]), _0x2c6ef7 = _0x597b3b[0x0]?.[_0x257204(0xca)]; if (_0x2c6ef7) { const _0x1489fe = await downloadAndSaveMedia(_0x2c6ef7, _0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.[_0x257204(0x102)][0x0]?.[_0x257204(0x175)]?.['id']); saveMessage(_0x3dd48d, _0x1b8562, _0x257204(0x175), { 'type': 'audio', 'audio': { 'link': process[_0x257204(0x16b)]['FRONTENDURI'] + _0x257204(0xbc) + _0x1489fe } }); } botWebhook(_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.[_0x257204(0x102)][0x0]?.['document']?.[_0x257204(0xa4)] || 'aU1uLzohPGMncyrwlPIb', _0x1b8562, _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.['contacts'][0x0]?.['wa_id'], _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)] ? _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.['value']?.['contacts'][0x0]?.[_0x257204(0xfb)]?.[_0x257204(0x18b)] : 'NA'); } else { if (_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.['messages'] && _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0x121)]) { const _0xf7c8df = convertNumberToRandomString(_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.[_0x257204(0x142)], _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)] ? _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.[_0x257204(0xfb)]?.[_0x257204(0x18b)] : 'NA'), _0x42a677 = __dirname + _0x257204(0xd7) + _0x1b8562 + '/' + _0xf7c8df + _0x257204(0x160); updateMessageObjectInFile(_0x42a677, _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.['value']?.[_0x257204(0x102)][0x0]?.[_0x257204(0x121)]?.[_0x257204(0x115)], _0x257204(0x121), _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.[_0x257204(0x102)][0x0]?.['reaction']?.[_0x257204(0x16a)]); const _0xf9ae2b = getIOInstance(), _0x3c618b = await query(_0x257204(0x13e), [_0x1b8562]); _0xf9ae2b['to'](_0x3c618b[0x0]?.[_0x257204(0x17a)])['emit']('push_new_reaction', { 'reaction': _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.['reaction']?.[_0x257204(0x16a)], 'chatId': _0xf7c8df, 'msgId': _0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.[_0x257204(0x102)][0x0]?.[_0x257204(0x121)]?.[_0x257204(0x115)] }); const _0x1a28ed = await query(_0x257204(0x11d), [_0x1b8562, _0xf7c8df]); if (_0x1a28ed[_0x257204(0xa5)] > 0x0) { const _0x319218 = await query(_0x257204(0x13e), [_0x1a28ed[0x0]?.[_0x257204(0xa3)]]); _0xf9ae2b['to'](_0x319218[0x0]?.[_0x257204(0x17a)])[_0x257204(0x190)](_0x257204(0xc0), { 'reaction': _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.['messages'][0x0]?.[_0x257204(0x121)]?.[_0x257204(0x16a)], 'chatId': _0xf7c8df, 'msgId': _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.['messages'][0x0]?.[_0x257204(0x121)]?.[_0x257204(0x115)] }); } } else { if (_0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.['messages'] && _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.[_0x257204(0x102)][0x0]?.['button']?.[_0x257204(0x173)]) saveMessage(_0x3dd48d, _0x1b8562, _0x257204(0x173), { 'type': _0x257204(0x173), 'text': { 'preview_url': !![], 'body': _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.[_0x257204(0x102)][0x0]?.['button']?.['text'] } }), botWebhook(_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0x132)]?.[_0x257204(0x173)] || _0x257204(0x118), _0x1b8562, _0x3dd48d?.['entry'][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.['contacts'][0x0]?.[_0x257204(0x142)], _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)] ? _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.['contacts'][0x0]?.[_0x257204(0xfb)]?.[_0x257204(0x18b)] : 'NA'); else { if (_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)] && _0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.['interactive']?.['button_reply']) saveMessage(_0x3dd48d, _0x1b8562, _0x257204(0x173), { 'type': _0x257204(0x173), 'text': { 'preview_url': !![], 'body': _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.['messages'][0x0]?.[_0x257204(0xa8)]?.[_0x257204(0xa7)]?.[_0x257204(0xee)] } }), botWebhook(_0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0xa8)]?.[_0x257204(0xa7)]?.['title'] || _0x257204(0x118), _0x1b8562, _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.[_0x257204(0x142)], _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)] ? _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.[_0x257204(0xfb)]?.[_0x257204(0x18b)] : 'NA'); else { if (_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x129)] && _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.['statuses'][0x0]?.['id']) { const _0x582399 = _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.['statuses'][0x0]?.['id'], _0x253c7d = convertNumberToRandomString(_0x3dd48d?.['entry'][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x129)][0x0]?.[_0x257204(0xde)], _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'] || 'NA'), _0xd0c47d = __dirname + '/../conversations/inbox/' + _0x1b8562 + '/' + _0x253c7d + _0x257204(0x160); updateMessageObjectInFile(_0xd0c47d, _0x582399, _0x257204(0x13d), _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x129)][0x0]?.['status']); const _0x4ff70c = getIOInstance(), _0x2ad3ed = await query('SELECT\x20*\x20FROM\x20rooms\x20WHERE\x20uid\x20=\x20?', [_0x1b8562]); _0x4ff70c['to'](_0x2ad3ed[0x0]?.[_0x257204(0x17a)])[_0x257204(0x190)](_0x257204(0x144), { 'chatId': _0x253c7d, 'status': _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x129)][0x0]?.[_0x257204(0x13d)], 'msgId': _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.[_0x257204(0x129)][0x0]?.['id'] }); const _0x189025 = await query(_0x257204(0x11d), [_0x1b8562, _0x253c7d]); if (_0x189025['length'] > 0x0) { const _0x535920 = await query(_0x257204(0x13e), [_0x189025[0x0]?.[_0x257204(0xa3)]]); _0x4ff70c['to'](_0x535920[0x0]?.[_0x257204(0x17a)])['emit'](_0x257204(0x144), { 'chatId': _0x253c7d, 'status': _0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x129)][0x0]?.[_0x257204(0x13d)], 'msgId': _0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x129)][0x0]?.['id'] }); } _0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x129)][0x0]?.['status'] === 'failed' ? (console['log']({ 'hey': JSON[_0x257204(0x186)](_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x129)][0x0]?.[_0x257204(0x12f)][0x0]?.[_0x257204(0xcc)]) }), await query(_0x257204(0x14f), [_0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.[_0x257204(0x129)][0x0]?.[_0x257204(0x13d)], JSON['stringify'](_0x3dd48d), _0x582399])) : await query(_0x257204(0xd4), [_0x3dd48d?.[_0x257204(0x127)][0x0]?.['changes'][0x0]?.['value']?.[_0x257204(0x129)][0x0]?.[_0x257204(0x13d)], _0x582399]); } else _0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.['messages'] && _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.[_0x257204(0xa8)]?.[_0x257204(0xe5)] && (saveMessage(_0x3dd48d, _0x1b8562, _0x257204(0x173), { 'type': _0x257204(0x173), 'text': { 'preview_url': !![], 'body': _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.['value']?.['messages'][0x0]?.[_0x257204(0xa8)]?.['list_reply']?.[_0x257204(0xee)] } }), botWebhook(_0x3dd48d?.['entry'][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x102)][0x0]?.['interactive']?.[_0x257204(0xe5)]?.[_0x257204(0xee)] || _0x257204(0x118), _0x1b8562, _0x3dd48d?.['entry'][0x0]?.['changes'][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.['wa_id'], _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)] ? _0x3dd48d?.[_0x257204(0x127)][0x0]?.[_0x257204(0x140)][0x0]?.[_0x257204(0x108)]?.[_0x257204(0x145)][0x0]?.['profile']?.[_0x257204(0x18b)] : 'NA')); } } } } } } } } } function updateMessageObjectInFile(_0x1135b8, _0x32a471, _0x818e05, _0x18ac64) { const _0x4488e0 = _0x2e6c69; fs[_0x4488e0(0xc2)](_0x1135b8, _0x4488e0(0x17c), (_0x2a7372, _0x3b41b9) => { const _0x308b62 = _0x4488e0; if (_0x2a7372) { console['error'](_0x308b62(0xf0), _0x2a7372); return; } try { const _0x2a9ae = JSON[_0x308b62(0x128)](_0x3b41b9), _0x35fb0b = _0x2a9ae['find'](_0x255ab5 => _0x255ab5['metaChatId'] === _0x32a471); _0x35fb0b ? (_0x35fb0b[_0x818e05] = _0x18ac64, console['log'](_0x308b62(0x137) + _0x32a471 + ':\x20' + _0x818e05 + '\x20set\x20to\x20' + _0x18ac64), fs[_0x308b62(0x11f)](_0x1135b8, JSON['stringify'](_0x2a9ae, null, 0x2), _0x308b62(0x17c), _0x3386e7 => { const _0x27ebd4 = _0x308b62; if (_0x3386e7) { console['error'](_0x27ebd4(0x110), _0x3386e7); return; } console['log'](_0x27ebd4(0xd5)); })) : console[_0x308b62(0x174)](_0x308b62(0x146) + _0x32a471 + '\x20not\x20found'); } catch (_0x872536) { console[_0x308b62(0x174)](_0x308b62(0x116), _0x872536); } }); } async function downloadAndSaveMedia(_0x16a6cf, _0x34a3ec) { const _0x4de540 = _0x2e6c69; try { const _0x255928 = 'https://graph.facebook.com/v19.0/' + _0x34a3ec + '/', _0x58a205 = await axios(_0x255928, { 'headers': { 'Authorization': _0x4de540(0x14a) + _0x16a6cf } }), _0x4e8d2b = { 'method': _0x4de540(0x18a), 'url': _0x58a205?.['data']?.[_0x4de540(0xd1)], 'headers': { 'Authorization': _0x4de540(0x14a) + _0x16a6cf }, 'responseType': _0x4de540(0x107) }, _0x3f93b6 = await axios(_0x4e8d2b), _0x32cdf3 = _0x3f93b6[_0x4de540(0x166)][_0x4de540(0x180)][_0x4de540(0x182)]('/')[0x1], _0x20d202 = randomstring[_0x4de540(0x18e)](), _0x3860d1 = __dirname + _0x4de540(0x117) + _0x20d202; return fs[_0x4de540(0xfd)](_0x3860d1 + '.' + _0x32cdf3, _0x3f93b6[_0x4de540(0x12b)]), _0x20d202 + '.' + _0x32cdf3; } catch (_0xf5e3d7) { console['error'](_0x4de540(0xe4), _0xf5e3d7); } } function getCurrentTimestampInTimeZone(_0x116867) { const _0x593607 = _0x2e6c69, _0x436931 = moment['tz'](_0x116867), _0x4a4770 = Math[_0x593607(0x15e)](_0x436931['valueOf']() / 0x3e8); return _0x4a4770; } function addObjectToFile(_0x4b70b7, _0x225a8e) { const _0x248445 = _0x2e6c69, _0x5c340e = path[_0x248445(0x131)](_0x225a8e); !fs['existsSync'](_0x5c340e) && fs['mkdirSync'](_0x5c340e, { 'recursive': !![] }); if (fs['existsSync'](_0x225a8e)) { const _0x23875d = JSON['parse'](fs[_0x248445(0x188)](_0x225a8e)); Array[_0x248445(0xf8)](_0x23875d) ? (_0x23875d['push'](_0x4b70b7), fs[_0x248445(0xfd)](_0x225a8e, JSON[_0x248445(0x186)](_0x23875d, null, 0x2))) : console[_0x248445(0x174)](_0x248445(0x15c)); } else fs[_0x248445(0xfd)](_0x225a8e, JSON['stringify']([_0x4b70b7], null, 0x2)); } function convertNumberToRandomString(_0x140f98) { const _0x5f4aeb = _0x2e6c69, _0x1e890e = { '0': 'i', '1': 'j', '2': 'I', '3': 'u', '4': 'I', '5': 'U', '6': 'S', '7': 'D', '8': 'B', '9': 'j' }, _0x30804a = _0x140f98[_0x5f4aeb(0x15f)](); let _0x56f0de = ''; for (let _0x287796 = 0x0; _0x287796 < _0x30804a['length']; _0x287796++) { const _0x3afccb = _0x30804a[_0x287796]; _0x56f0de += _0x1e890e[_0x3afccb]; } return _0x56f0de; } function saveJsonToFile(_0xea08d8, _0x3a278d) { const _0x221325 = _0x2e6c69, _0x31ad74 = Date[_0x221325(0xb7)](), _0x280fb0 = _0x31ad74 + _0x221325(0x160), _0x1b327d = JSON['stringify'](_0xea08d8, null, 0x2), _0x26e5e3 = _0x3a278d; !fs[_0x221325(0x12a)](_0x26e5e3) && fs['mkdirSync'](_0x26e5e3); const _0x1ecaaa = path[_0x221325(0x13f)](_0x26e5e3, _0x280fb0); fs[_0x221325(0xfd)](_0x1ecaaa, _0x1b327d), console[_0x221325(0xbb)]('JSON\x20data\x20saved\x20to\x20' + _0x1ecaaa); } function isValidEmail(_0x205de8) { const _0x3055d3 = _0x2e6c69, _0x575339 = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; return _0x575339[_0x3055d3(0x111)](_0x205de8); } function areMobileNumbersFilled(_0x2a7028) { const _0x430987 = _0x2e6c69; for (const _0x48e938 of _0x2a7028) { if (!_0x48e938[_0x430987(0x195)]) return ![]; } return !![]; } function getFileExtension(_0x208b68) { const _0xf209de = _0x2e6c69, _0x558995 = _0x208b68[_0xf209de(0x165)]('.'); if (_0x558995 !== -0x1 && _0x558995 !== 0x0) { const _0x34dd14 = _0x208b68['substring'](_0x558995 + 0x1); return _0x34dd14[_0xf209de(0x101)](); } return ''; } function writeJsonToFile(_0x2de1d6, _0x57723c, _0x18cb9c) { return new Promise((_0x12a9fb, _0x204716) => { const _0xc8339b = _0x341e, _0x1caa0d = path[_0xc8339b(0x131)](_0x2de1d6); fs[_0xc8339b(0x156)](_0x1caa0d, { 'recursive': !![] }, function (_0x251070) { const _0x296b9e = _0xc8339b; if (_0x251070) { _0x18cb9c && _0x18cb9c(_0x251070); _0x204716(_0x251070); return; } const _0x298f5b = JSON['stringify'](_0x57723c, null, 0x2); fs[_0x296b9e(0x11f)](_0x2de1d6, _0x298f5b, { 'flag': 'w' }, function (_0x10af81) { const _0x584d84 = _0x296b9e; if (_0x10af81) { _0x18cb9c && _0x18cb9c(_0x10af81); _0x204716(_0x10af81); return; } const _0x48bc62 = _0x584d84(0xa2) + _0x2de1d6 + '\x27.'; _0x18cb9c && _0x18cb9c(null, _0x48bc62), _0x12a9fb(_0x48bc62); }); }); }); } function _0x3ba1() { const _0xf589c0 = ['document', 'log', '/meta-media/', '206790rjXBQB', 'px;\x20height:\x20auto;\x20cursor:\x20pointer;\x20z-index:\x209999;\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</a>\x0a\x20\x20\x20\x20\x20\x20<!--\x20Widget\x20content\x20-->\x0a\x0a\x20\x20\x20\x20\x20\x20<div\x20\x20class=\x22widget-container\x22\x20id=\x22widget-container\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20style=\x22position:\x20fixed;\x20top:\x2050%;\x20left:\x2050%;\x20transform:\x20translate(-50%,\x20-50%);\x20background-color:\x20#fff;\x20border:\x201px\x20solid\x20#ccc;\x20border-radius:\x205px;\x20padding:\x2010px;\x20box-shadow:\x200px\x202px\x205px\x20rgba(0,\x200,\x200,\x200.1);\x20display:\x20none;\x20z-index:\x209999;\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22close-btn\x22\x20id=\x22close-btn\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20style=\x22position:\x20absolute;\x20top:\x205px;\x20right:\x205px;\x20cursor:\x20pointer;\x22>&times;</span>\x0a\x20\x20\x20\x20\x20\x20</div>\x0a\x0a\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x0a\x20\x20\x20\x20\x20\x20<script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20Get\x20references\x20to\x20the\x20image\x20and\x20widget\x20container\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20widgetImage\x20=\x20document.getElementById(\x27widget-image\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20widgetContainer\x20=\x20document.getElementById(\x27widget-container\x27);\x0a\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20Redirect\x20to\x20a\x20URL\x20when\x20the\x20image\x20is\x20clicked\x0a\x20\x20\x20\x20\x20\x20\x20\x20widgetImage.addEventListener(\x27click\x27,\x20function\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20Replace\x20\x27', '2779929zNbGOE', 'push_new_reaction', 'target', 'readFile', '/message_templates?name=', 'position:\x20fixed;\x20bottom:\x2015px;\x20right:\x2015px;', 'size', 'all', 'Email\x20From', 'type', 'Mar', 'access_token', 'https://graph.facebook.com/v17.0/', 'message', 'header_handle', 'https://wa.me/', 'Feb', '536MiDQyj', 'url', 'path', 'application/octet-stream', 'UPDATE\x20broadcast_log\x20SET\x20delivery_status\x20=\x20?\x20WHERE\x20meta_msg_id\x20=\x20?', 'File\x20updated\x20successfully', '465', '/../conversations/inbox/', 'components', 'GET', 'BOTTOM_CENTER', 'axios', 'flow', 'number', 'recipient_id', 'Oct', 'SELECT\x20*\x20FROM\x20meta_templet_media\x20WHERE\x20templet_name\x20=\x20?', 'getMonth', 'Dec', '/../flow-json/nodes/', 'Error\x20downloading\x20media:', 'list_reply', 'reduce', 'file', 'position:\x20fixed;\x20bottom:\x2015px;\x20right:\x2050%;\x20transform:\x20translateX(-50%);', 'replace', 'Apr', 'SELECT\x20*\x20FROM\x20meta_api\x20WHERE\x20uid\x20=\x20?', 'slice', 'Jan', 'title', '2487838bdCfSs', 'Error\x20reading\x20file:', 'nodemailer', 'Error\x20downloading\x20and\x20extracting\x20file:', '4570265pQLBgo', 'HEADER', 'ps_l=0;\x20ps_n=0', '&file_type=', 'Error\x20response:', 'isArray', 'randomstring', 'includes', 'profile', 'individual', 'writeFileSync', 'getFullYear', 'UPDATE\x20user\x20SET\x20plan\x20=\x20?,\x20plan_expire\x20=\x20?\x20WHERE\x20uid\x20=\x20?', '/media/', 'toLowerCase', 'messages', 'No\x20file\x20data\x20found\x20in\x20FormData', 'body', 'Invalid\x20JSON\x20format:', '2614360IOqeRf', 'arraybuffer', 'value', 'Error\x20fetching\x20data:', 'filter', 'allow_chatbot', 'video', 'constants', 'query', '0\x20days', 'Error\x20writing\x20file:', 'test', 'application/json', 'UPDATE\x20chats\x20SET\x20last_message_came\x20=\x20?,\x20last_message\x20=\x20?,\x20is_opened\x20=\x20?\x20WHERE\x20chat_id\x20=\x20?', 'File\x20', 'message_id', 'Error\x20parsing\x20JSON:', '/../client/public/meta-media/', 'aU1uLzohPGMncyrwlPIb', 'https://graph.facebook.com/', 'Email', '\x20days', 'timezone', 'SELECT\x20*\x20FROM\x20agent_chats\x20WHERE\x20owner_uid\x20=\x20?\x20AND\x20chat_id\x20=\x20?', 'May', 'writeFile', 'sendMail', 'reaction', 'plan', 'UPDATE\x20chats\x20SET\x20last_message_came\x20=\x20?,\x20last_message\x20=\x20?,\x20is_opened\x20=\x20?\x20WHERE\x20chat_id\x20=\x20?\x20AND\x20uid\x20=\x20?', 'business_phone_number_id', 'createTransport', 'paidUsers', 'entry', 'parse', 'statuses', 'existsSync', 'data', 'body_text', '/message_templates', 'email', 'errors', 'Extract', 'dirname', 'button', 'plan_duration_in_days', 'POST', 'json', 'flow_id', 'Updated\x20message\x20with\x20metaChatId\x20', '5586104GgBFeN', 'UPDATE\x20chats\x20SET\x20is_opened\x20=\x20?\x20WHERE\x20chat_id\x20=\x20?', 'push', 'position:\x20fixed;\x20top:\x2015px;\x20right:\x2015px;', 'Unable\x20to\x20to\x20find\x20API\x20', 'status', 'SELECT\x20*\x20FROM\x20rooms\x20WHERE\x20uid\x20=\x20?', 'join', 'changes', 'Nov', 'wa_id', 'TOP_CENTER', 'update_delivery_status', 'contacts', 'Message\x20with\x20metaChatId\x20', 'BODY', '/messages', '187cgORhC', 'Bearer\x20', 'createdAt', 'File\x20not\x20found:', 'chats', '\x20width:\x20', 'UPDATE\x20broadcast_log\x20SET\x20delivery_status\x20=\x20?,\x20err\x20=\x20?\x20WHERE\x20meta_msg_id\x20=\x20?', 'DOCUMENT', '1mUEsOK', 'OAuth\x20', 'whatsapp', '73197EJTgvb', 'IMAGE', 'mkdir', 'Invalid\x20Email', 'Aug', 'unlinkSync', 'user\x20not\x20found', 'push_new_msg', 'File\x20does\x20not\x20contain\x20an\x20array.', 'application/pdf', 'round', 'toString', '.json', 'dialogType', 'map', '/../flow-json/edges/', 'msgContent', 'lastIndexOf', 'headers', '\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20});\x0a\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20Close\x20widget\x20when\x20close\x20button\x20is\x20clicked\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20closeBtn\x20=\x20document.getElementById(\x27close-btn\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20closeBtn.addEventListener(\x27click\x27,\x20function\x20(event)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20event.stopPropagation();\x20//\x20Prevents\x20the\x20click\x20event\x20from\x20propagating\x20to\x20the\x20widget\x20image\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20widgetContainer.style.display\x20=\x20\x27none\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20});\x0a\x20\x20\x20\x20\x20\x20</script>\x0a\x20\x20\x20\x20', '\x22\x20alt=\x22Widget\x22\x20id=\x22widget-image\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20style=\x22', 'Error\x20deleting\x20file\x20', 'emoji', 'env', 'context', '65rIeNzY', 'moment-timezone', '\x0a\x20\x20\x20\x20<a\x20href=\x22', 'sender_mobile', '../socket', 'Jun', 'text', 'error', 'audio', 'SELECT\x20*\x20FROM\x20chatbot\x20WHERE\x20uid\x20=\x20?\x20AND\x20active\x20=\x20?', 'access', 'TOP_LEFT', 'state', 'socket_id', 'header', 'utf8', 'position:\x20fixed;\x20bottom:\x2015px;\x20left:\x2015px;', 'image', 'find', 'content-type', 'example', 'split', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?', '\x22>\x0a\x20\x20\x20\x20\x20\x20<img\x20\x20src=\x22', 'error\x20in\x20saveMessage\x20in\x20function\x20', 'stringify', 'unzipper', 'readFileSync', 'FRONTENDURI', 'get', 'name', 'pipe', 'App\x20was\x20successfully\x20installed/updated', 'generate', 'from', 'emit', 'Sep', 'ALL_CENTER', 'Error\x20reading\x20JSON\x20file\x20', 'Jul', 'mobile', 'Error\x20reading\x20JSON\x20file:', 'CAME\x20HERE', 'Message\x20sent\x20successfully!', 'JSON\x20data\x20has\x20been\x20written\x20to\x20\x27', 'uid', 'caption', 'length', 'F_OK', 'button_reply', 'interactive', 'stat', 'accessSync', 'DELETE', 'SELECT\x20*\x20FROM\x20chats\x20WHERE\x20uid\x20=\x20?', 'language', 'unlink', 'UPDATE\x20chatbot\x20SET\x20active\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'unpaidUsers', 'plan_expire', '\x20with\x20the\x20desired\x20URL\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20window.location.href\x20=\x20\x27', 'file_name', '\x20has\x20been\x20deleted.', 'template', 'unshift', 'now', '{{OTHER_MSG}}', 'update_conversations']; _0x3ba1 = function () { return _0xf589c0; }; return _0x3ba1(); } function deleteFileIfExists(_0x40a920) { const _0x42c703 = _0x2e6c69; fs[_0x42c703(0x177)](_0x40a920, fs[_0x42c703(0x10d)][_0x42c703(0xa6)], _0x3550ec => { const _0x3370d4 = _0x42c703; if (_0x3550ec) { console[_0x3370d4(0x174)](_0x3370d4(0x114) + _0x40a920 + '\x20does\x20not\x20exist.'); return; } fs[_0x3370d4(0xae)](_0x40a920, _0x65fbb4 => { const _0x375684 = _0x3370d4; if (_0x65fbb4) { console['error'](_0x375684(0x169) + _0x40a920 + ':', _0x65fbb4); return; } console['log'](_0x375684(0x114) + _0x40a920 + _0x375684(0xb4)); }); }); } function readJsonFromFile(_0x541e6c) { const _0x2359b3 = _0x2e6c69; try { const _0x2b379d = fs['readFileSync'](_0x541e6c, _0x2359b3(0x17c)), _0x403747 = JSON[_0x2359b3(0x128)](_0x2b379d); return Array[_0x2359b3(0xf8)](_0x403747) ? _0x403747 : []; } catch (_0x53a122) { return console[_0x2359b3(0x174)](_0x2359b3(0x193) + _0x541e6c + ':', _0x53a122), []; } } function readJSONFile(_0x5edad2, _0x432c4a) { const _0x2b6419 = _0x2e6c69; try { if (!fs['existsSync'](_0x5edad2)) return console[_0x2b6419(0x174)](_0x2b6419(0x14c), _0x5edad2), []; const _0x3ba837 = fs[_0x2b6419(0x188)](_0x5edad2, _0x2b6419(0x17c)), _0x3767ee = JSON[_0x2b6419(0x128)](_0x3ba837); if (!Array['isArray'](_0x3767ee)) return console[_0x2b6419(0x174)](_0x2b6419(0x105), _0x5edad2), []; if (typeof _0x432c4a === _0x2b6419(0xdd) && _0x432c4a > 0x0) return _0x3767ee[_0x2b6419(0xec)](-_0x432c4a); return _0x3767ee; } catch (_0x275930) { return console[_0x2b6419(0x174)](_0x2b6419(0x196), _0x275930), []; } } function updateMetaTempletInMsg(_0x2cef89, _0x55ac48, _0x526785, _0x1b4872) { return new Promise(async (_0x4ac267, _0x3e5949) => { const _0x1b9479 = _0x341e; try { console[_0x1b9479(0xbb)]({ 'thisss': _0x2cef89 }); const _0x4f8808 = await query(_0x1b9479(0x183), [_0x2cef89]); if (_0x4f8808['length'] < 0x1) return _0x4ac267({ 'success': ![], 'msg': _0x1b9479(0x15a) }); const _0x5496f8 = getCurrentTimestampInTimeZone(_0x4f8808[0x0]?.[_0x1b9479(0x11c)] || Date[_0x1b9479(0xb7)]() / 0x3e8), _0x43d084 = { ..._0x55ac48, 'metaChatId': _0x1b4872, 'timestamp': _0x5496f8 }, _0xd0da07 = __dirname + _0x1b9479(0xd7) + _0x2cef89 + '/' + _0x526785 + _0x1b9479(0x160); addObjectToFile(_0x43d084, _0xd0da07); const _0x2dcd28 = getIOInstance(); await query(_0x1b9479(0x113), [_0x5496f8, JSON[_0x1b9479(0x186)](_0x55ac48), 0x0, _0x526785]); const _0x5f1e69 = await query(_0x1b9479(0x13e), [_0x2cef89]); await query(_0x1b9479(0x139), [0x1, _0x526785]); const _0x73b247 = await query(_0x1b9479(0xac), [_0x2cef89]); _0x2dcd28['to'](_0x5f1e69[0x0]?.[_0x1b9479(0x17a)])[_0x1b9479(0x190)]('update_conversations', { 'chats': _0x73b247, 'notificationOff': !![] }), _0x2dcd28['to'](_0x5f1e69[0x0]?.[_0x1b9479(0x17a)])[_0x1b9479(0x190)](_0x1b9479(0x15b), { 'msg': _0x43d084, 'chatId': _0x526785 }), _0x4ac267(); } catch (_0x131f06) { _0x3e5949(_0x131f06); } }); } function sendAPIMessage(_0x54370e, _0x17bda0, _0x46db5c) { return new Promise(async _0x580741 => { const _0x1d696f = _0x341e; try { const _0x1728ed = _0x1d696f(0xcb) + _0x17bda0 + '/messages', _0x38e739 = { 'messaging_product': _0x1d696f(0x153), 'recipient_type': _0x1d696f(0xfc), ..._0x54370e }, _0x4c75d3 = await fetch(_0x1728ed, { 'method': 'POST', 'headers': { 'Content-Type': 'application/json', 'Authorization': _0x1d696f(0x14a) + _0x46db5c }, 'body': JSON[_0x1d696f(0x186)](_0x38e739) }), _0x1f3136 = await _0x4c75d3[_0x1d696f(0x135)](); if (_0x1f3136?.[_0x1d696f(0x174)]) return _0x580741({ 'success': ![], 'message': _0x1f3136?.[_0x1d696f(0x174)]?.[_0x1d696f(0xcc)] }); _0x580741({ 'success': !![], 'message': _0x1d696f(0xa1), 'data': _0x1f3136?.[_0x1d696f(0x102)][0x0] }); } catch (_0xbaba76) { _0x580741({ 'success': ![], 'msg': _0xbaba76['toString'](), 'err': _0xbaba76 }), console[_0x1d696f(0xbb)](_0xbaba76); } }); } function sendMetaMsg(_0x2987fa, _0x98739f, _0x2378f0, _0x4a98d2, _0x154455) { return new Promise(async _0x5e9091 => { const _0xa8ce46 = _0x341e; try { const _0x2c7012 = await query(_0xa8ce46(0xeb), [_0x2987fa]), _0x481142 = await query(_0xa8ce46(0x183), [_0x2987fa]); if (_0x2c7012[_0xa8ce46(0xa5)] < 0x1) return _0x5e9091({ 'success': ![], 'msg': _0xa8ce46(0x13c) }); const _0x590971 = _0x2c7012[0x0]?.[_0xa8ce46(0xca)], _0x2747ad = _0x2c7012[0x0]?.[_0xa8ce46(0x124)]; if (!_0x590971 || !_0x2747ad) return _0x5e9091({ 'success': ![], 'msg': 'Please\x20add\x20your\x20meta\x20token\x20and\x20phone\x20number\x20ID' }); const _0x5d0428 = _0xa8ce46(0xcb) + _0x2747ad + _0xa8ce46(0x148), _0x17ed82 = { 'messaging_product': _0xa8ce46(0x153), 'recipient_type': 'individual', 'to': _0x2378f0, ..._0x98739f }, _0x3cfdbd = await fetch(_0x5d0428, { 'method': _0xa8ce46(0x134), 'headers': { 'Content-Type': _0xa8ce46(0x112), 'Authorization': _0xa8ce46(0x14a) + _0x590971 }, 'body': JSON['stringify'](_0x17ed82) }), _0x5d4824 = await _0x3cfdbd[_0xa8ce46(0x135)](); if (_0x5d4824?.[_0xa8ce46(0x174)]) return _0x5e9091({ 'success': ![], 'msg': _0x5d4824?.[_0xa8ce46(0x174)]?.[_0xa8ce46(0xcc)] }); if (_0x5d4824?.[_0xa8ce46(0x102)][0x0]?.['id']) { const _0x352e65 = getCurrentTimestampInTimeZone(_0x481142[0x0]?.[_0xa8ce46(0x11c)] || Date[_0xa8ce46(0xb7)]() / 0x3e8), _0xb7c982 = { ..._0x4a98d2, 'metaChatId': _0x5d4824?.['messages'][0x0]?.['id'], 'timestamp': _0x352e65 }, _0x514dac = __dirname + _0xa8ce46(0xd7) + _0x2987fa + '/' + _0x154455 + _0xa8ce46(0x160); addObjectToFile(_0xb7c982, _0x514dac), await query(_0xa8ce46(0x113), [_0x352e65, JSON['stringify'](_0xb7c982), 0x1, _0x154455]); const _0x1bb51a = getIOInstance(), _0x2d654d = await query('SELECT\x20*\x20FROM\x20rooms\x20WHERE\x20uid\x20=\x20?', [_0x2987fa]); await query(_0xa8ce46(0x139), [0x1, _0x154455]); const _0x4ab4d9 = await query('SELECT\x20*\x20FROM\x20chats\x20WHERE\x20uid\x20=\x20?', [_0x2987fa]); _0x1bb51a['to'](_0x2d654d[0x0]?.[_0xa8ce46(0x17a)])['emit']('update_conversations', { 'chats': _0x4ab4d9, 'notificationOff': !![] }), _0x1bb51a['to'](_0x2d654d[0x0]?.[_0xa8ce46(0x17a)])[_0xa8ce46(0x190)](_0xa8ce46(0x15b), { 'msg': _0xb7c982, 'chatId': _0x154455 }); const _0x24f1be = await query(_0xa8ce46(0x11d), [_0x2987fa, _0x154455]); if (_0x24f1be['length'] > 0x0) { const _0x551023 = await query('SELECT\x20*\x20FROM\x20rooms\x20WHERE\x20uid\x20=\x20?', [_0x24f1be[0x0]?.[_0xa8ce46(0xa3)]]); _0x1bb51a['to'](_0x551023[0x0]?.[_0xa8ce46(0x17a)])[_0xa8ce46(0x190)](_0xa8ce46(0xb9), { 'chats': _0x4ab4d9 }), _0x1bb51a['to'](_0x551023[0x0]?.[_0xa8ce46(0x17a)])['emit']('push_new_msg', { 'msg': _0xb7c982, 'chatId': _0x154455 }); } } _0x5e9091({ 'success': !![] }); } catch (_0x1b2b9d) { _0x5e9091({ 'success': ![], 'msg': _0x1b2b9d['toString'](), 'err': _0x1b2b9d }), console['log'](_0x1b2b9d); } }); } function mergeArrays(_0x25cc17, _0x5dd0bd) { const _0x542d68 = _0x2e6c69, _0x16b6a3 = _0x5dd0bd[_0x542d68(0x162)](_0x5de4cb => { const _0x30887e = _0x542d68, _0x3902b0 = _0x25cc17[_0x30887e(0x17f)](_0x20883f => _0x20883f[_0x30887e(0x195)] === _0x5de4cb[_0x30887e(0x170)]); if (_0x3902b0) return { ..._0x5de4cb, 'contact': _0x3902b0 }; return _0x5de4cb; }); return _0x16b6a3; } async function getBusinessPhoneNumber(_0x280c1d, _0x36a4ff, _0x4e380e) { const _0x14e1c9 = _0x2e6c69, _0x1ecb72 = _0x14e1c9(0x119) + _0x280c1d + '/' + _0x36a4ff, _0x37f17f = { 'method': _0x14e1c9(0xd9), 'headers': { 'Authorization': _0x14e1c9(0x14a) + _0x4e380e } }; try { const _0x16361e = await fetch(_0x1ecb72, _0x37f17f), _0x449e29 = await _0x16361e[_0x14e1c9(0x135)](); return _0x449e29; } catch (_0x2dcf0a) { console['error']('Error\x20fetching\x20data:', _0x2dcf0a); throw _0x2dcf0a; } } async function createMetaTemplet(_0x2f7531, _0x4567ea, _0x42d225, _0x498ff7) { const _0x22df89 = _0x2e6c69, _0x4f5f79 = 'https://graph.facebook.com/' + _0x2f7531 + '/' + _0x4567ea + '/message_templates', _0x218a08 = { 'method': 'POST', 'headers': { 'Authorization': 'Bearer\x20' + _0x42d225, 'Content-Type': _0x22df89(0x112) }, 'body': JSON['stringify'](_0x498ff7) }; try { const _0x3db8e6 = await fetch(_0x4f5f79, _0x218a08), _0x18b0bd = await _0x3db8e6['json'](); return _0x18b0bd; } catch (_0x482920) { console[_0x22df89(0x174)](_0x22df89(0x109), _0x482920); throw _0x482920; } } async function getAllTempletsMeta(_0x59c202, _0x4dbcee, _0x448c79) { const _0x4aaa6d = _0x2e6c69, _0x457a89 = _0x4aaa6d(0x119) + _0x59c202 + '/' + _0x4dbcee + _0x4aaa6d(0x12d), _0x262bba = { 'method': _0x4aaa6d(0xd9), 'headers': { 'Authorization': 'Bearer\x20' + _0x448c79 } }; try { const _0x7c3563 = await fetch(_0x457a89, _0x262bba), _0x21db77 = await _0x7c3563['json'](); return _0x21db77; } catch (_0x48b78b) { console[_0x4aaa6d(0x174)](_0x4aaa6d(0x109), _0x48b78b); throw _0x48b78b; } } async function delMetaTemplet(_0x59627b, _0x364f1d, _0x47a75d, _0x7c33ea) { const _0x3b7f57 = _0x2e6c69, _0x26b06b = _0x3b7f57(0x119) + _0x59627b + '/' + _0x364f1d + _0x3b7f57(0xc3) + _0x7c33ea, _0x480e56 = { 'method': _0x3b7f57(0xab), 'headers': { 'Authorization': 'Bearer\x20' + _0x47a75d } }; try { const _0x1eefdc = await fetch(_0x26b06b, _0x480e56), _0x5296b0 = await _0x1eefdc[_0x3b7f57(0x135)](); return _0x5296b0; } catch (_0x2f215c) { console[_0x3b7f57(0x174)](_0x3b7f57(0x109), _0x2f215c); throw _0x2f215c; } } async function sendMetatemplet(_0x1d30c0, _0x49e86a, _0x2ac55c, _0x21c991, _0x1842b8, _0x4b06a8) { const _0x1d9b81 = _0x2e6c69, _0x6a9a5f = _0x21c991?.['components']?.[_0x1d9b81(0x10a)](_0x3f68eb => _0x3f68eb[_0x1d9b81(0xc8)] === _0x1d9b81(0x147)), _0xc84c22 = _0x21c991?.[_0x1d9b81(0xd8)]?.[_0x1d9b81(0x10a)](_0x46eff8 => _0x46eff8['type'] === _0x1d9b81(0xf4)), _0x3b10b7 = _0xc84c22[_0x1d9b81(0xa5)] > 0x0 ? _0xc84c22[0x0]?.['format'] : ''; console[_0x1d9b81(0xbb)]({ 'template': JSON[_0x1d9b81(0x186)](_0x21c991) }); let _0x32e781 = { 'name': _0x21c991?.['name'], 'language': { 'code': _0x21c991?.[_0x1d9b81(0xad)] }, 'components': [] }; if (_0x6a9a5f[_0x1d9b81(0xa5)] > 0x0) { const _0x5f0b9b = _0x6a9a5f[0x0]?.[_0x1d9b81(0x181)]?.[_0x1d9b81(0x12c)][0x0]?.[_0x1d9b81(0x162)]((_0x11414d, _0x27da64) => ({ 'type': _0x1d9b81(0x173), 'text': _0x1842b8[_0x27da64] || _0x11414d })); _0x5f0b9b && _0x32e781[_0x1d9b81(0xd8)][_0x1d9b81(0x13a)]({ 'type': _0x1d9b81(0x104), 'parameters': _0x5f0b9b }); } if (_0x3b10b7 === _0x1d9b81(0x155) && _0xc84c22['length'] > 0x0) { const _0x110c91 = await query('SELECT\x20*\x20FROM\x20meta_templet_media\x20WHERE\x20templet_name\x20=\x20?', [_0x21c991?.['name']]); _0x32e781[_0x1d9b81(0xd8)]['unshift']({ 'type': 'header', 'parameters': [{ 'type': 'image', 'image': { 'link': _0x4b06a8 || _0x110c91[_0x1d9b81(0xa5)] > 0x0 ? process[_0x1d9b81(0x16b)]['FRONTENDURI'] + _0x1d9b81(0x100) + _0x110c91[0x0]?.[_0x1d9b81(0xb3)] : _0xc84c22[0x0][_0x1d9b81(0x181)]?.[_0x1d9b81(0xcd)][0x0] } }] }); } if (_0x3b10b7 === 'VIDEO' && _0xc84c22[_0x1d9b81(0xa5)] > 0x0) { const _0x6430f2 = await query('SELECT\x20*\x20FROM\x20meta_templet_media\x20WHERE\x20templet_name\x20=\x20?', [_0x21c991?.[_0x1d9b81(0x18b)]]); _0x32e781['components'][_0x1d9b81(0xb6)]({ 'type': _0x1d9b81(0x17b), 'parameters': [{ 'type': 'video', 'video': { 'link': _0x4b06a8 || _0x6430f2[_0x1d9b81(0xa5)] > 0x0 ? process['env'][_0x1d9b81(0x189)] + _0x1d9b81(0x100) + _0x6430f2[0x0]?.[_0x1d9b81(0xb3)] : _0xc84c22[0x0][_0x1d9b81(0x181)]?.[_0x1d9b81(0xcd)][0x0] } }] }); } if (_0x3b10b7 === _0x1d9b81(0x150) && _0xc84c22[_0x1d9b81(0xa5)] > 0x0) { const _0x35da95 = await query(_0x1d9b81(0xe0), [_0x21c991?.['name']]); _0x32e781[_0x1d9b81(0xd8)][_0x1d9b81(0xb6)]({ 'type': _0x1d9b81(0x17b), 'parameters': [{ 'type': _0x1d9b81(0xba), 'document': { 'link': _0x4b06a8 || _0x35da95[_0x1d9b81(0xa5)] > 0x0 ? process[_0x1d9b81(0x16b)][_0x1d9b81(0x189)] + '/media/' + _0x35da95[0x0]?.[_0x1d9b81(0xb3)] : _0xc84c22[0x0][_0x1d9b81(0x181)]?.[_0x1d9b81(0xcd)][0x0], 'filename': _0x1d9b81(0xba) } }] }); } const _0x2df0c7 = 'https://graph.facebook.com/v18.0/' + _0x49e86a + _0x1d9b81(0x148), _0x37dea6 = { 'messaging_product': _0x1d9b81(0x153), 'to': _0x1d30c0, 'type': _0x1d9b81(0xb5), 'template': _0x32e781 }, _0x402994 = { 'method': _0x1d9b81(0x134), 'headers': { 'Authorization': _0x1d9b81(0x14a) + _0x2ac55c, 'Content-Type': 'application/json' }, 'body': JSON[_0x1d9b81(0x186)](_0x37dea6) }; try { const _0x3b72f9 = await fetch(_0x2df0c7, _0x402994), _0x1724cb = await _0x3b72f9['json'](); return console[_0x1d9b81(0xbb)]({ 'data': JSON[_0x1d9b81(0x186)](_0x1724cb) }), console[_0x1d9b81(0xbb)]({ 'body': JSON[_0x1d9b81(0x186)](_0x37dea6) }), _0x1724cb; } catch (_0x8c4dee) { console[_0x1d9b81(0x174)]('Error\x20sending\x20message:', _0x8c4dee); throw _0x8c4dee; } } function getFileInfo(_0x2ebef0) { return new Promise((_0x4863f1, _0x32df3b) => { const _0xed0172 = _0x341e; fs[_0xed0172(0xa9)](_0x2ebef0, (_0x11b17b, _0x52cba2) => { const _0x3892da = _0xed0172; if (_0x11b17b) _0x32df3b(_0x11b17b); else { const _0x4c7a6f = _0x52cba2[_0x3892da(0xc5)], _0xb1e2c2 = mime['lookup'](_0x2ebef0) || _0x3892da(0xd3); _0x4863f1({ 'fileSizeInBytes': _0x4c7a6f, 'mimeType': _0xb1e2c2 }); } }); }); } async function getSessionUploadMediaMeta(_0x5cc540, _0x53d3f2, _0x15a500, _0xfdad50, _0x41e8a1) { const _0x1bb535 = _0x2e6c69, _0x20f2bc = _0x1bb535(0x119) + _0x5cc540 + '/' + _0x53d3f2 + '/uploads?file_length=' + _0xfdad50 + _0x1bb535(0xf6) + _0x41e8a1, _0x36cd89 = { 'method': 'POST', 'headers': { 'Authorization': _0x1bb535(0x14a) + _0x15a500 } }; try { const _0xbd02ad = await fetch(_0x20f2bc, _0x36cd89), _0x555870 = await _0xbd02ad[_0x1bb535(0x135)](); return _0x555870; } catch (_0x1f463f) { console[_0x1bb535(0x174)](_0x1bb535(0x109), _0x1f463f); throw _0x1f463f; } } async function uploadFileMeta(_0x396bd4, _0x180649, _0x517bcc, _0x3aecb2) { return new Promise(async _0x240454 => { const _0x4957f4 = _0x341e; try { const _0x40ad1 = fs['readFileSync'](_0x180649), _0x6d262b = _0x4957f4(0x119) + _0x517bcc + '/' + _0x396bd4, _0x540572 = { 'method': _0x4957f4(0x134), 'headers': { 'Authorization': _0x4957f4(0x152) + _0x3aecb2, 'Content-Type': _0x4957f4(0x15d), 'Cookie': _0x4957f4(0xf5) }, 'body': _0x40ad1 }, _0x8c5f0d = await fetch(_0x6d262b, _0x540572); if (!_0x8c5f0d['ok']) { const _0x10e41b = await _0x8c5f0d[_0x4957f4(0x135)](); return console[_0x4957f4(0x174)](_0x4957f4(0xf7), _0x10e41b), _0x240454({ 'success': ![], 'data': _0x10e41b }); } const _0x352c6d = await _0x8c5f0d['json'](); return _0x240454({ 'success': !![], 'data': _0x352c6d }); } catch (_0x463d06) { return _0x240454({ 'success': ![], 'data': _0x463d06 }); } }); } async function getMetaNumberDetail(_0x5bbd53, _0x550e2b, _0x11f0c8) { const _0x59d16a = _0x2e6c69, _0x141a03 = _0x59d16a(0x119) + _0x5bbd53 + '/' + _0x550e2b, _0x8a3953 = { 'method': _0x59d16a(0xd9), 'headers': { 'Authorization': 'Bearer\x20' + _0x11f0c8, 'Content-Type': _0x59d16a(0x112) } }; try { const _0x6ba5a = await fetch(_0x141a03, _0x8a3953), _0x5d1e50 = await _0x6ba5a['json'](); return _0x5d1e50; } catch (_0x5e3298) { console[_0x59d16a(0x174)]('Error\x20fetching\x20data:', _0x5e3298); throw _0x5e3298; } } function addDaysToCurrentTimestamp(_0x2840fe) { let _0x1cbba5 = Date['now'](), _0x482b3d = _0x2840fe * 0x18 * 0x3c * 0x3c * 0x3e8, _0x396652 = _0x1cbba5 + _0x482b3d; return _0x396652; } async function updateUserPlan(_0x278500, _0x1d8429) { const _0x864c10 = _0x2e6c69; console[_0x864c10(0xbb)]({ 'plan': _0x278500 }); const _0x14793b = parseInt(_0x278500?.[_0x864c10(0x133)] || 0x0), _0x5e993c = addDaysToCurrentTimestamp(_0x14793b); await query(_0x864c10(0xff), [JSON[_0x864c10(0x186)](_0x278500), _0x5e993c, _0x1d8429]); } function validateEmail(_0x181ba3) { const _0x254ca8 = _0x2e6c69, _0x37d71a = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; return _0x37d71a[_0x254ca8(0x111)](String(_0x181ba3)[_0x254ca8(0x101)]()); } function sendEmail(_0x561af4, _0x54fc2b, _0x4c1ee0, _0x28891f, _0x135e8f, _0x29d608, _0x268b00, _0x1f39cf) { return new Promise(async _0x399f2d => { const _0x236c40 = _0x341e; try { let _0x4de3f5 = nodemailer[_0x236c40(0x125)]({ 'host': _0x561af4, 'port': _0x54fc2b, 'secure': _0x54fc2b === _0x236c40(0xd6) ? !![] : ![], 'auth': { 'user': _0x4c1ee0, 'pass': _0x28891f } }), _0x1470e8 = await _0x4de3f5[_0x236c40(0x120)]({ 'from': (_0x268b00 || _0x236c40(0xc7)) + '\x20<' + _0x4c1ee0 + '>', 'to': _0x1f39cf, 'subject': _0x29d608 || _0x236c40(0x11a), 'html': _0x135e8f }); _0x399f2d({ 'success': !![], 'info': _0x1470e8 }); } catch (_0x4faa8d) { _0x399f2d({ 'success': ![], 'err': _0x4faa8d[_0x236c40(0x15f)]() || _0x236c40(0x157) }); } }); } function getUserSignupsByMonth(_0x9cf7f4) { const _0xa635b = _0x2e6c69, _0x3e1f07 = ['Jan', _0xa635b(0xcf), _0xa635b(0xc9), _0xa635b(0xea), _0xa635b(0x11e), _0xa635b(0x172), _0xa635b(0x194), _0xa635b(0x158), _0xa635b(0x191), _0xa635b(0xdf), _0xa635b(0x141), _0xa635b(0xe2)], _0x387ed4 = new Date(), _0x470d79 = _0x387ed4[_0xa635b(0xfe)](), { paidUsers: _0x5548e5, unpaidUsers: _0x215673 } = _0x9cf7f4[_0xa635b(0xe6)]((_0xc3e3e3, _0x319e8b) => { const _0x181479 = _0xa635b, _0x39dc3a = _0x319e8b[_0x181479(0xb1)] ? new Date(parseInt(_0x319e8b['plan_expire'])) : null, _0x3fad4e = _0x39dc3a ? _0x39dc3a > _0x387ed4 : ![]; return _0x3fad4e ? _0xc3e3e3[_0x181479(0x126)][_0x181479(0x13a)](_0x319e8b) : _0xc3e3e3[_0x181479(0xb0)][_0x181479(0x13a)](_0x319e8b), _0xc3e3e3; }, { 'paidUsers': [], 'unpaidUsers': [] }), _0x5d9029 = _0x3e1f07[_0xa635b(0x162)]((_0xda7838, _0x25c4c1) => { const _0x5487fa = _0xa635b, _0x4aa8cc = _0x5548e5[_0x5487fa(0x10a)](_0x1aa2bd => { const _0x3dc0ee = _0x5487fa, _0x3e4e64 = new Date(_0x1aa2bd[_0x3dc0ee(0x14b)]); return _0x3e4e64[_0x3dc0ee(0xe1)]() === _0x25c4c1 && _0x3e4e64[_0x3dc0ee(0xfe)]() === _0x470d79; }), _0x2cfc3d = _0x4aa8cc[_0x5487fa(0xa5)], _0x38653e = _0x4aa8cc[_0x5487fa(0x162)](_0xf76e20 => _0xf76e20[_0x5487fa(0x12e)]); return { 'month': _0xda7838, 'numberOfSignups': _0x2cfc3d, 'userEmails': _0x38653e, 'paid': !![] }; }), _0x4303be = _0x3e1f07['map']((_0x5529a0, _0x1e9a95) => { const _0x1153f2 = _0xa635b, _0x1409b2 = _0x215673[_0x1153f2(0x10a)](_0x22a5cc => { const _0x2045f2 = _0x1153f2, _0x13a73f = new Date(_0x22a5cc['createdAt']); return _0x13a73f[_0x2045f2(0xe1)]() === _0x1e9a95 && _0x13a73f[_0x2045f2(0xfe)]() === _0x470d79; }), _0x5e94f3 = _0x1409b2[_0x1153f2(0xa5)], _0x57b267 = _0x1409b2['map'](_0x1e84d3 => _0x1e84d3[_0x1153f2(0x12e)]); return { 'month': _0x5529a0, 'numberOfSignups': _0x5e94f3, 'userEmails': _0x57b267, 'paid': ![] }; }); return { 'paidSignupsByMonth': _0x5d9029, 'unpaidSignupsByMonth': _0x4303be }; } function getUserOrderssByMonth(_0x5e125c) { const _0x2760fa = _0x2e6c69, _0x3bc015 = [_0x2760fa(0xed), _0x2760fa(0xcf), _0x2760fa(0xc9), 'Apr', _0x2760fa(0x11e), _0x2760fa(0x172), _0x2760fa(0x194), 'Aug', 'Sep', 'Oct', 'Nov', _0x2760fa(0xe2)], _0x490411 = new Date(), _0x50fc25 = _0x490411[_0x2760fa(0xfe)](), _0x1c0216 = Array[_0x2760fa(0x18f)]({ 'length': 0xc }, (_0x7dfe82, _0x4f4ec7) => { const _0x252567 = _0x2760fa, _0x28a3b3 = _0x3bc015[_0x4f4ec7], _0x104057 = _0x5e125c['filter'](_0x16f7cb => { const _0x19a077 = _0x341e, _0x799d13 = new Date(_0x16f7cb[_0x19a077(0x14b)]); return _0x799d13['getMonth']() === _0x4f4ec7 && _0x799d13[_0x19a077(0xfe)]() === _0x50fc25; }), _0x206a09 = _0x104057[_0x252567(0xa5)]; return { 'month': _0x28a3b3, 'numberOfOders': _0x206a09 }; }); return _0x1c0216; } function getNumberOfDaysFromTimestamp(_0x5f4b2e) { const _0x4e7c1f = _0x2e6c69; if (!_0x5f4b2e || isNaN(_0x5f4b2e)) return '0\x20days'; const _0x53dd2b = Date[_0x4e7c1f(0xb7)](); if (_0x5f4b2e <= _0x53dd2b) return _0x4e7c1f(0x10f); const _0x2f4550 = 0x3e8 * 0x3c * 0x3c * 0x18, _0x2922b3 = Math['ceil']((_0x5f4b2e - _0x53dd2b) / _0x2f4550); return _0x2922b3 + _0x4e7c1f(0x11b); } async function getUserPlayDays(_0x30542c) { const _0x5599c1 = _0x2e6c69, _0x178a80 = await query(_0x5599c1(0x183), [_0x30542c]); if (_0x178a80['length'] < 0x1) return 0x0; if (!_0x178a80[0x0][_0x5599c1(0xb1)]) return 0x0; else { const _0xfab40b = getNumberOfDaysFromTimestamp(_0x178a80[0x0]?.[_0x5599c1(0xb1)]); return _0xfab40b; } } function folderExists(_0x3cebc5) { const _0x44b0ee = _0x2e6c69; try { return fs[_0x44b0ee(0xaa)](_0x3cebc5, fs[_0x44b0ee(0x10d)]['F_OK']), !![]; } catch (_0x53c166) { return ![]; } } async function downloadAndExtractFile(_0x12f101, _0x455b9b) { const _0x4fc898 = _0x2e6c69; try { const _0x3cd54b = _0x12f101[_0x4fc898(0xe7)]; if (!_0x3cd54b) return { 'success': ![], 'msg': _0x4fc898(0x103) }; const _0x29791a = path[_0x4fc898(0x13f)](_0x455b9b, _0x3cd54b[_0x4fc898(0x18b)]); return await new Promise((_0x5fd39d, _0x1af8d5) => { _0x3cd54b['mv'](_0x29791a, _0x87c27f => { _0x87c27f ? _0x1af8d5(_0x87c27f) : _0x5fd39d(); }); }), await fs['createReadStream'](_0x29791a)[_0x4fc898(0x18c)](unzipper[_0x4fc898(0x130)]({ 'path': _0x455b9b }))['promise'](), fs[_0x4fc898(0x159)](_0x29791a), { 'success': !![], 'msg': _0x4fc898(0x18d) }; } catch (_0x185e5c) { return console['error'](_0x4fc898(0xf2), _0x185e5c), { 'success': ![], 'msg': _0x185e5c['message'] }; } } function fetchProfileFun(_0x466464, _0x1a5cae) { return new Promise(async (_0xdec15, _0x3baabc) => { const _0x26586d = _0x341e; try { const _0x25fdb4 = await fetch(_0x26586d(0xcb) + _0x466464, { 'method': _0x26586d(0xd9), 'headers': { 'Content-Type': _0x26586d(0x112), 'Authorization': _0x26586d(0x14a) + _0x1a5cae } }), _0x5847b4 = await _0x25fdb4[_0x26586d(0x135)](); return _0x5847b4['error'] ? _0xdec15({ 'success': ![], 'msg': _0x5847b4[_0x26586d(0x174)]?.['message'] }) : _0xdec15({ 'success': !![], 'data': _0x5847b4 }); } catch (_0x2f177b) { console['log']({ 'error': _0x2f177b }), _0x3baabc(_0x2f177b); } }); } function returnWidget(_0x19037f, _0x1326f9, _0x5e2259, _0x1d002f) { const _0x5f4ec5 = _0x2e6c69; let _0x27bc2a = ''; switch (_0x1d002f) { case 'TOP_RIGHT': _0x27bc2a = _0x5f4ec5(0x13b); break; case _0x5f4ec5(0x143): _0x27bc2a = 'position:\x20fixed;\x20top:\x2015px;\x20right:\x2050%;\x20transform:\x20translateX(-50%);'; break; case _0x5f4ec5(0x178): _0x27bc2a = 'position:\x20fixed;\x20top:\x2015px;\x20left:\x2015px;'; break; case 'BOTTOM_RIGHT': _0x27bc2a = _0x5f4ec5(0xc4); break; case _0x5f4ec5(0xda): _0x27bc2a = _0x5f4ec5(0xe8); break; case 'BOTTOM_LEFT': _0x27bc2a = _0x5f4ec5(0x17d); break; case _0x5f4ec5(0x192): _0x27bc2a = 'position:\x20fixed;\x20top:\x2050%;\x20left:\x2050%;\x20transform:\x20translate(-50%,\x20-50%);'; break; default: _0x27bc2a = _0x5f4ec5(0x13b); break; }return _0x5f4ec5(0x16f) + _0x5e2259 + _0x5f4ec5(0x184) + _0x19037f + _0x5f4ec5(0x168) + _0x27bc2a + _0x5f4ec5(0x14e) + _0x1326f9 + _0x5f4ec5(0xbe) + _0x5e2259 + _0x5f4ec5(0xb2) + _0x5e2259 + _0x5f4ec5(0x167); } function _0x341e(_0x54a703, _0x4a78ec) { const _0x3ba191 = _0x3ba1(); return _0x341e = function (_0x341eea, _0x445840) { _0x341eea = _0x341eea - 0xa0; let _0xe1f0bd = _0x3ba191[_0x341eea]; return _0xe1f0bd; }, _0x341e(_0x54a703, _0x4a78ec); } function generateWhatsAppURL(_0x3e0792, _0x5ad8ff) { const _0x862503 = _0x2e6c69, _0x262587 = _0x862503(0xce), _0x112ddc = _0x3e0792[_0x862503(0xe9)](/\D/g, ''), _0x1b7493 = encodeURIComponent(_0x5ad8ff); return '' + _0x262587 + _0x112ddc + '?text=' + _0x1b7493; } module['exports'] = { 'isValidEmail': isValidEmail, 'downloadAndExtractFile': downloadAndExtractFile, 'folderExists': folderExists, 'sendAPIMessage': sendAPIMessage, 'sendEmail': sendEmail, 'getUserPlayDays': getUserPlayDays, 'getNumberOfDaysFromTimestamp': getNumberOfDaysFromTimestamp, 'getUserOrderssByMonth': getUserOrderssByMonth, 'getUserSignupsByMonth': getUserSignupsByMonth, 'validateEmail': validateEmail, 'updateUserPlan': updateUserPlan, 'getFileInfo': getFileInfo, 'uploadFileMeta': uploadFileMeta, 'getMetaNumberDetail': getMetaNumberDetail, 'getSessionUploadMediaMeta': getSessionUploadMediaMeta, 'sendMetaMsg': sendMetaMsg, 'updateMetaTempletInMsg': updateMetaTempletInMsg, 'sendMetatemplet': sendMetatemplet, 'delMetaTemplet': delMetaTemplet, 'getAllTempletsMeta': getAllTempletsMeta, 'createMetaTemplet': createMetaTemplet, 'getBusinessPhoneNumber': getBusinessPhoneNumber, 'botWebhook': botWebhook, 'mergeArrays': mergeArrays, 'readJSONFile': readJSONFile, 'writeJsonToFile': writeJsonToFile, 'getCurrentTimestampInTimeZone': getCurrentTimestampInTimeZone, 'saveWebhookConversation': saveWebhookConversation, 'saveJsonToFile': saveJsonToFile, 'readJsonFromFile': readJsonFromFile, 'deleteFileIfExists': deleteFileIfExists, 'areMobileNumbersFilled': areMobileNumbersFilled, 'getFileExtension': getFileExtension, 'executeQueries': executeQueries, 'fetchProfileFun': fetchProfileFun, 'returnWidget': returnWidget, 'generateWhatsAppURL': generateWhatsAppURL };